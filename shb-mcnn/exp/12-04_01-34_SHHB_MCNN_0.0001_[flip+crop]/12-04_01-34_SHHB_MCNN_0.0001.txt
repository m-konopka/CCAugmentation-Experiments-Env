import os
from easydict import EasyDict as edict
import time
import torch

# init
__C = edict()
cfg = __C

#------------------------------TRAIN------------------------
__C.SEED = 3035 # random seed,  for reporduction
__C.DATASET = 'SHHB' # dataset selection: SHHA, SHHB, UCF50, UCFQNRF, WE

if __C.DATASET == 'UCF50':# only for UCF50
	from datasets.UCF50.setting import cfg_data
	__C.VAL_INDEX = cfg_data.VAL_INDEX 

if __C.DATASET == 'GCC':# only for GCC
	from datasets.GCC.setting import cfg_data
	__C.VAL_MODE = cfg_data.VAL_MODE 


__C.NET = 'MCNN' # net selection: MCNN, VGG, VGG_DECODER

__C.PRE_GCC = False # use the pretrained model on GCC dataset
__C.PRE_GCC_MODEL = '' # path to model

__C.RESUME = False # contine training
__C.RESUME_PATH = './exp/04-25_09-19_SHHB_VGG_1e-05/latest_state.pth' # 

__C.GPU_ID = [0] # sigle gpu: [0], [1] ...; multi gpus: [0,1]

# learning rate settings
__C.LR = 1e-4 # learning rate
__C.LR_DECAY = 0.995 # decay rate
__C.LR_DECAY_START = -1 # when training epoch is more than it, the learning rate will be begin to decay
__C.NUM_EPOCH_LR_DECAY = 1 # decay frequency
__C.MAX_EPOCH = 610

# print 
__C.PRINT_FREQ = 10

now = time.strftime("%m-%d_%H-%M", time.localtime())

__C.EXP_NAME = now \
			 + '_' + __C.DATASET \
             + '_' + __C.NET \
             + '_' + str(__C.LR)

if __C.DATASET == 'UCF50':
	__C.EXP_NAME += '_' + str(__C.VAL_INDEX)	

if __C.DATASET == 'GCC':
	__C.EXP_NAME += '_' + __C.VAL_MODE	

__C.EXP_PATH = './exp' # the path of logs, checkpoints, and current codes


#------------------------------VAL------------------------
__C.VAL_DENSE_START = 100
__C.VAL_FREQ = 10 # Before __C.VAL_DENSE_START epoches, the freq is set as __C.VAL_FREQ

#------------------------------VIS------------------------
__C.VISIBLE_NUM_IMGS = 1 #  must be 1 for training images with the different sizes



#================================================================================
#================================================================================
#================================================================================  



===============+++++++++++++++===============

all_ep_001_mae_75.20_mse_120.72
    [mae 75.20 mse 120.72], [val loss 0.0139]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_021_mae_70.67_mse_110.51
    [mae 70.67 mse 110.51], [val loss 0.0117]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_041_mae_41.01_mse_74.47
    [mae 41.01 mse 74.47], [val loss 0.0101]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_071_mae_30.56_mse_57.85
    [mae 30.56 mse 57.85], [val loss 0.0095]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_103_mae_28.80_mse_47.01
    [mae 28.80 mse 47.01], [val loss 0.0090]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_105_mae_26.51_mse_51.90
    [mae 26.51 mse 51.90], [val loss 0.0090]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_125_mae_23.57_mse_38.74
    [mae 23.57 mse 38.74], [val loss 0.0087]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_138_mae_22.06_mse_40.01
    [mae 22.06 mse 40.01], [val loss 0.0087]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_150_mae_27.02_mse_37.76
    [mae 27.02 mse 37.76], [val loss 0.0087]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_178_mae_21.68_mse_40.73
    [mae 21.68 mse 40.73], [val loss 0.0084]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_180_mae_24.44_mse_33.83
    [mae 24.44 mse 33.83], [val loss 0.0085]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_187_mae_20.70_mse_39.40
    [mae 20.70 mse 39.40], [val loss 0.0083]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_298_mae_20.18_mse_39.49
    [mae 20.18 mse 39.49], [val loss 0.0081]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_308_mae_18.76_mse_32.89
    [mae 18.76 mse 32.89], [val loss 0.0079]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_326_mae_19.05_mse_32.28
    [mae 19.05 mse 32.28], [val loss 0.0080]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_448_mae_18.43_mse_33.56
    [mae 18.43 mse 33.56], [val loss 0.0078]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_459_mae_19.31_mse_31.87
    [mae 19.31 mse 31.87], [val loss 0.0078]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_488_mae_19.10_mse_31.60
    [mae 19.10 mse 31.60], [val loss 0.0078]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_505_mae_18.18_mse_29.63
    [mae 18.18 mse 29.63], [val loss 0.0078]
===============+++++++++++++++===============

